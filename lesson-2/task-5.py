"""5. Реализовать структуру «Рейтинг», представляющую собой
невозрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.

Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде,
например, my_list = [7, 5, 3, 3, 2].
"""

my_list = [7, 5, 3, 3, 2]
print(f'Добро пожаловать в систему "Рейтинг". Сейчас список такой: {my_list}')
while True:
    rate_var = input('Введите q, если вы хотите выйти или натуральное число - новый элемент рейтинга: ')
    # организуем выход из цикла
    if rate_var == 'q':
        break
    # ищем место для нового рейтинга
    rate_var = int(rate_var)
    # Если рейтинг меньше минимального прошлого
    if rate_var < min(my_list):
        my_list.append(rate_var)
    # Если рейтинг больше максимального прошлого
    elif rate_var > max(my_list):
        my_list.insert(0, rate_var)
    # ищем место для нового рейтинга
    else:
        my_list.reverse()
        for elem in my_list:
            if rate_var <= elem:
                my_list.insert(my_list.index(elem), rate_var)
                break # до первой встречи
        my_list.reverse()
    # выводим новый список
    print(f'Сейчас список такой: {my_list}')
